/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 iphone.gltf
Author: Pr0G4m1ngXD (https://sketchfab.com/Pr0G4m1ngXD)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/purple-phone-d2898233cd8748a3ac1fbb25864345f4
Title: Purple Phone
*/

import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    Cube_Material_0: THREE.Mesh
    Cube_Material002_0: THREE.Mesh
    Cube_Material003_0: THREE.Mesh
    Cube_Material001_0: THREE.Mesh
    Cube_Material004_0: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
    'Material.002': THREE.MeshStandardMaterial
    'Material.003': THREE.MeshStandardMaterial
    'Material.001': THREE.MeshStandardMaterial
    'Material.004': THREE.MeshStandardMaterial
  }
}

export function Model(props:any) {
  const { nodes, materials } = useGLTF('/iphone.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <group rotation={[-(Math.PI / 2) - 0.25, 0, 0]} scale={125}>
          <mesh geometry={nodes.Cube_Material_0.geometry} material={materials.Material} />
          <mesh geometry={nodes.Cube_Material002_0.geometry} material={materials['Material.002']} />
          <mesh geometry={nodes.Cube_Material003_0.geometry} material={materials['Material.003']} />
          <mesh geometry={nodes.Cube_Material001_0.geometry} material={materials['Material.001']} />
          <mesh geometry={nodes.Cube_Material004_0.geometry} material={materials['Material.004']} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/iphone.gltf')
